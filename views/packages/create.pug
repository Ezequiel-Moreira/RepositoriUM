extends ../layout

block head
		script.
			function joinPaths ( p1, p2 ) {
					if ( !p1 && !p2 ) return '';
					else if ( !p1 ) return p2;
					else if ( !p2 ) return p1;
					else if ( p1.endsWith( '/' ) && p2.startsWith( '/' ) ) return p1 + p2.slice( 1 );
					else if ( p1.endsWith( '/' ) || p2.startsWidth( '/' ) ) return p1 + p2;
					else return p1 + '/' + p2;
			}

			application.register( "file", class extends Stimulus.Controller {
					static get targets () {
							return [ 'txtPath', 'txtFile', 'txtName', 'lblFullname' ];
					}

					get dirname () {
							return this.data.get( 'dirname' );
					}

					set dirname ( value ) {
							this.data.set( 'dirname', value );

							this.fullname = joinPaths( this.dirname, this.basename );
					}

					get basename () {
							return this.data.get( 'basename' );
					}

					set basename ( value ) {
							this.data.set( 'basename', value );

							this.fullname = joinPaths( this.dirname, this.basename );
					}

					get fullname () {
							return this.data.get( 'fullname' );
					}

					set fullname ( value ) {
							this.data.set( 'fullname', value );

							if ( this.hasLblFullnameTarget ) {
									$( this.lblFullnameTarget ).text( this.fullname );
							}

							if ( this.basename ) {
									$( this.txtPathTarget ).val( this.fullname );

									if ( this.basename != $( this.txtNameTarget ).val() ) {
											$( this.txtNameTarget ).val( this.basename );
									}
							} else {
									$( this.txtPathTarget ).val( '' );
							}
					}

					updateFile () {
							// Se o utilizador carregar algum ficheiro, e o nome do ficheiro estiver fazio, então por defeito o nome deve ser o mesmo nome do ficheiro que o utilizador acabou de carregar
							if ( !this.basename && this.txtFileTarget.files.length > 0 ) {
									this.basename = this.txtFileTarget.files[ 0 ].name;
							}
					}

					updateBasename () {
							this.basename = $( this.txtNameTarget ).val();
					}

					remove () {
							$( this.element ).remove();
					}
			} );

			application.register( "folder", class extends Stimulus.Controller {
					static get targets () {
							return [ 'txtName', 'lblFullname', 'foldersList', 'filesList' ];
					}

					addFolderTemplate () {
							return `<div class="w3-padding" data-controller="folder" data-folder-dirname="${ this.fullname }" data-folder-fullname="${ this.fullname }">
									<i class="fa fa-folder"></i> <span data-target="folder.lblFullname">${this.fullname}</span>
									<div class="w3-flex">
											<input class="w3-input w3-flex-grow w3-margin-right" type="text" placeholder="Folder name..." data-action="input->folder#updateName" data-target="folder.txtName" />
											<div class="w3-flex-fixed">
													<a class="w3-button w3-white w3-hover-green" data-action="click->folder#addFolder">
															<i class="fa fa-folder"></i>
													</a>
													<a class="w3-button w3-white w3-hover-green" data-action="click->folder#addFile">
															<i class="fa fa-plus"></i>
													</a>
													<a class="w3-button w3-white w3-hover-red" data-action="click->folder#remove">
															<i class="fa fa-minus"></i>
													</a>
											</div>
									</div>
									<!-- Cada subpasta pode ter também uma lista de sub-sub-pastas e sub-ficheios-->
									<div data-target="folder.foldersList"></div>
									<div data-target="folder.filesList"></div>
							</div>
							`;
					}

					get dirname () {
							return this.data.get( 'dirname' );
					}

					set dirname ( value ) {
							this.data.set( 'dirname', value );

							this.fullname = joinPaths( this.dirname, this.basename );
					}

					get basename () {
							return this.data.get( 'basename' );
					}

					set basename ( value ) {
							this.data.set( 'basename', value );

							this.fullname = joinPaths( this.dirname, this.basename );
					}

					get fullname () {
							return this.data.get( 'fullname' );
					}

					set fullname ( value ) {
							this.data.set( 'fullname', value );

							if ( this.hasLblFullnameTarget ) {
									$( this.lblFullnameTarget ).text( value );
							}

							for ( let child of this.foldersListTarget.children ) {
									const controller = this.application.getControllerForElementAndIdentifier( child, 'folder' );

									controller.dirname = this.fullname;
							}

							for ( let child of this.filesListTarget.children ) {
									const controller = this.application.getControllerForElementAndIdentifier( child, 'file' );

									controller.dirname = this.fullname;
							}
					}

					addFileTemplate () {
							return `<div class="w3-padding" data-controller="file" data-file-dirname="${ this.fullname }" data-file-basename="" data-file-fullname="${ this.fullname }">
									<i class="fa fa-file"></i><span data-target="file.lblFullname">${ this.fullname }</span>
									<div class="w3-flex">
											<input type="hidden" name="file_path" data-target="file.txtPath" />
											<div class="w3-row-padding w3-margin-right w3-flex-grow">
													<div class="w3-third">
															<input class="w3-input" type="file" placeholder="Upload file..." name="file_data" data-target="file.txtFile" data-action="input->file#updateFile" />
													</div>
													<div class="w3-third">
															<input class="w3-input" type="text" placeholder="File name..." data-target="file.txtName" data-action="input->file#updateBasename" />
													</div>
													<div class="w3-third">
															<input class="w3-input" type="text" placeholder="File description..." name="file_description" />
													</div>
											</div>
											<div class="w3-flex-fixed">
													<a class="w3-button w3-white w3-hover-red" data-action="click->file#remove">
															<i class="fa fa-minus"></i>
													</a>
											</div>
									</div>
							</div>
							`;
					}

					addFolder () {
							const folder = $.parseHTML( this.addFolderTemplate() );

							$( folder ).appendTo( this.foldersListTarget );
					}

					addFile () {
							const file=$.parseHTML(this.addFileTemplate());
							$(file).appendTo(this.fileListTarget);
					}

					remove(){
							$( this.element ).remove();
					}

					updateName(){
						const name = $( this.txtNameTarget ).val();

						this.basename = name;
					}

			} );


				function removeFromList ( event ) {
					$( event.target ).closest( '.w3-flex' ).remove();
				}

				function authorTemplate () {
						return `<div class="w3-flex">
							<div class="w3-row-padding w3-flex-grow">
								<div class="w3-quarter">
										<input class="w3-input" type="text" placeholder="Insira o nome do autor..." name="autor" />
								</div>
								<div class="w3-quarter">
										<input class="w3-input" type="text" placeholder="Insira o id do autor..." name="id" />
								</div>
								<div class="w3-quarter">
										<input class="w3-input" type="text" placeholder="Insira o email do autor..." name="mail" />
								</div>
								<div class="w3-quarter">
										<input class="w3-input" type="text" placeholder="Insira a UC do autor..." name="autUC" />
								</div>
						</div>
						<div class="w3-flex-fixed">
							<a class="w3-button w3-grey w3-hover-red btn-authors-remove">
								<i class="fa fa-minus"></i>
							</a>
						</div>
					</div>`;
				}


				function addAuthor () {
						var author = $.parseHTML( authorTemplate() );
						$( author ).appendTo( '#form-authors-list' );
						$( '.btn-authors-remove', author ).on( 'click', removeFromList );
				}


				function supervisorTemplate () {
					return `<div class="w3-flex">
						<div class="w3-row-padding w3-flex-grow">
							<div class="w3-half">
									<input class="w3-input" type="text" placeholder="Insira o nome do supervisor..." name="superv" />
							</div>
							<div class="w3-half">
									<input class="w3-input" type="text" placeholder="Insira o email do supervisor..." name="MS" />
							</div>
					</div>
					<div class="w3-flex-fixed">
						<a class="w3-button w3-grey w3-hover-red btn-supervisors-remove">
							<i class="fa fa-minus"></i>
						</a>
					</div>
				</div>`;
				}

				function addSupervisor () {
						var superv = $.parseHTML( supervisorTemplate() );
						$( superv ).appendTo( '#form-supervisors-list' );
						$( '.btn-supervisors-remove', superv ).on( 'click', removeFromList );
				}

				function keywordTemplate () {
						return `<div class="w3-flex">
							<div class="w3-row-padding w3-flex-grow">
									<input class="w3-input" type="text" placeholder="Insira keyword..." name="keyword" />
						</div>
						<div class="w3-flex-fixed">
							<a class="w3-button w3-grey w3-hover-red btn-keywords-remove">
								<i class="fa fa-minus"></i>
							</a>
						</div>
					</div>`;
				}


				function addKeyword () {
						var keyword = $.parseHTML( keywordTemplate() );
						$( keyword ).appendTo( '#form-keywords-list' );
						$( '.btn-keywords-remove', keyword ).on( 'click', removeFromList );
				}

				function fileTemplate(){
					return `<div class="w3-flex">
						<div class="w3-row-padding w3-flex-grow">
							<div class="w3-half">
								<input class="w3-input" type="file" placeholder="insira ficheiros nesta pasta..." name="file_data" />
							</div>
							<div class="w3-half">
								<input class="w3-input" type="text" placeholder="insira a descrição deste ficheiro ..." name="file_description" />
							</div>
					</div>
					<div class="w3-flex-fixed">
						<a class="w3-button w3-grey w3-hover-red btn-files-remove">
							<i class="fa fa-minus"></i>
						</a>
					</div>
				</div>`;
				}

				function addFile(){
						var file = $.parseHTML( fileTemplate() );
						$( file ).appendTo( '#form-folder-list' );
						$( '.btn-files-remove', file ).on( 'click', removeFromList );
				}

				function folderTemplate(){
					return `
					<div>
						<input class="w3-input" type="text" placeholder="insira nome da subpasta..." name="file_path" />
						<div class="w3-flex">
							<div class="w3-row-padding w3-flex-grow">
								<div class="w3-half">
									<input class="w3-input" type="file" placeholder="insira ficheiros nesta pasta..." name="file_data" />
								</div>
								<div class="w3-half">
									<input class="w3-input" type="text" placeholder="insira a descrição deste ficheiro ..." name="file_description" />
								</div>
							</div>
						<div class="w3-flex-fixed">
							<a class="w3-button w3-grey w3-hover-red btn-files-remove">
								<i class="fa fa-minus"></i>
							</a>
						</div>
						</div>
						<div class="w3-padding w3-center ">
							<a class="w3-button w3-green #btn-files-add" >
								<i class="fa fa-plus"></i>
								Adicionar ficheiros
							</a>
							<a class="w3-button w3-green #btn-folders-add">
								<i class="fa fa-plus"></i>
								Adicionar subpastas
							</a>
							<a class="w3-button w3-green btn-folders-remove">
								<i class="fa fa-minus"></i>
								Remover subpasta
							</a>
						</div>
					</div>`;
				}

				function addFolder(){
						var folder = $.parseHTML( folderTemplate() );
						$( folder ).appendTo( '#form-folder-list' );
						$( '.btn-folders-remove', folder ).on( 'click', removeFromList );
				}

				$( () => {
						$( '#btn-authors-add' ).on( 'click', addAuthor );
						$( '#btn-supervisors-add' ).on( 'click', addSupervisor );
						$( '#btn-keywords-add' ).on( 'click', addKeyword );
						$( '#btn-files-add' ).on('click',addFile);
						$( '#btn-folders-add' ).on('click',addFolder);

						$( '.btn-authors-remove' ).on( 'click', removeFromList );
						$( '.btn-supervisors-remove' ).on( 'click', removeFromList );
						$( '.btn-keywords-remove' ).on( 'click', removeFromList );
						$( '.btn-files-remove' ).on('click',removeFromList );
						$( '.btn-folders-remove' ).on('click',removeFromList );
				} );



block content
		div.w3-row-padding
			form(method="post" action="/packages/create" enctype="multipart/form-data")
					p
							label Titulo
							input.w3-input(type="text" placeholder="Insira o titulo..." name="title")
					p
							label Contexto
							input.w3-input(type="text" placeholder="Insira o contexto do trabalho..." name="context")

					p
							label Autores
							div#form-authors-list
									div.w3-flex
											div.w3-row-padding.w3-flex-grow
												div.w3-quarter
													input.w3-input(type="text" placeholder="Insira o nome do autor..." name="author")
												div.w3-quarter
													input.w3-input(type="text" placeholder="Insira o id do autor..." name="id")
												div.w3-quarter
													input.w3-input(type="text" placeholder="Insira o email do autor..." name="mail")
												div.w3-quarter
													input.w3-input(type="text" placeholder="Insira a UC do autor..." name="autUC")
											div.w3-flex-fixed
												a.w3-button.w3-grey.w3-hover-red.btn-authors-remove
													i.fa.fa-minus

							div.w3-padding.w3-center
									a.w3-button.w3-green#btn-authors-add
											i.fa.fa-plus
											|  Adicionar

					p
							label Supervisor
							div#form-supervisors-list
									div.w3-flex
											div.w3-row-padding.w3-flex-grow
												div.w3-half
													input.w3-input(type="text" placeholder="Insira o nome do supervisor..." name="superv")
												div.w3-half
													input.w3-input(type="text" placeholder="Insira o email do supervisor..." name="MS")
											div.w3-flex-fixed
												a.w3-button.w3-grey.w3-hover-red.btn-supervisors-remove
													i.fa.fa-minus
							div.w3-padding.w3-center
									a.w3-button.w3-green#btn-supervisors-add
										i.fa.fa-plus
										|  Adicionar

					p
							label Keyword
							div#form-keywords-list
								div.w3-flex
									div.w3-row-padding.w3-flex-grow
										input.w3-input(type="text" placeholder="Insira keyword..." name="keyword")
									div.w3-flex-fixed
										a.w3-button.w3-grey.w3-hover-red.btn-keywords-remove
											i.fa.fa-minus
							div.w3-padding.w3-center
									a.w3-button.w3-green#btn-keywords-add
											i.fa.fa-plus
											|  Adicionar

					p
							label Abstract
							input.w3-input(type="text" placeholder="Insira o abstract..." name="abstract")

					div.w3-padding( data-controller="folder" )
							div.w3-flex
								div.w3-flex-grow Folder
									div.w3-flex-fixed
										a.w3-button.w3-white.w3-hover-green( data-action="click->folder#addFolder" )
											i.fa.fa-folder
										a.w3-button.w3-white.w3-hover-green( data-action="click->folder#addFile" )
											i.fa.fa-plus
							div( data-target="folder.foldersList" )
							div( data-target="folder.filesList" )


					p
							label Pasta
							div#form-folder-list
								div.w3-flex
									div.w3-row-padding.w3-flex-grow
										div.w3-half
											input.w3-input(type="file" placeholder="insira ficheiros nesta pasta..." name="file_data")
										div.w3-half
											input.w3-input(type="text" placeholder="insira a descrição deste ficheiro ..." name="file_description")
									div.w3-flex-fixed
										a.w3-button.w3-grey.w3-hover-red.btn-files-remove
											i.fa.fa-minus
							div.w3-padding.w3-center
								a.w3-button.w3-green#btn-files-add
										i.fa.fa-plus
										|  Adicionar ficheiros
								a.w3-button.w3-green#btn-folders-add
										i.fa.fa-plus
										|  Adicionar subpastas



					p Por favor selecione que visualização pretende dar ao ficheiro que está a criar
					p
							label Estado
							select.w3-select(name="sort" style="margin-top: 8px; margin-bottom: 16px;")
									option(value="public" selected=searchSort == 'public') Publico
									option(value="private" selected=searchSort == 'private') Privado

					p
							input(type="submit" value="Submeter Ficheiro")
